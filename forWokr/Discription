Jktu1969

Уважаемые, столкнулся с тем, что многие используют для полной сборки проекта mvn clean install 

Используйте многопоточность, в которой умеет работать maven, дабы сохранить время. Например следующая команда
создаст 2 потока, которые будут (по возможности) вести сборку параллельно mvn -T 2 clean install

Либо иначе. Команда создаст 1 поток на каждое ядро (у меня их 4), но подгрузит компьютер.
mvn -T 1C clean install 

Сборка у меня на компьютере
количество задействованных ядер ——— время
1 ——— 53:55
2 ———33:36
3 ———25:12
4 ———22:34

Да прибудет с нами сила:)
*возможно на сервере мы также используем один поток, как и для прогонки тестов




Debug  IDEA ------------------------------------------------------------------------------------------------------------
/*В режиме Debug я могу делать изменения в class Update, и изменения будут подхватываться.*/
Пример просматривался: E:\VerPOM\designP\src\main\java\tests\idea\DebudTest.java

Git -----Как merge двух веток-------------------------------------------------------------------------------------------
1.Есть две ветки: master и MetaDataTemplate.
2.Делаем изменения (добавляем файлы) на ветке MetaDataTemplate. Commit изменения MetaDataTemplate. Название Commit: 0001_Experiment
3.Переходим на ветку master. Становимся на сделанном Commit 0001_Experiment ветки MetaDataTemplate и кликаем правой
    мышкой на нем. Далее выбираем merge.
4.Получаем сообщение, что ветки слиты.
Git --------------------------------------------------------------------------------------------------------------------
1.Изменение коментария
а)перейте в папку git-проекта, например   E:\A\_00003\amazonmigrationstudio\.git
б)в комендной строке дать команду
    $git commit --amend -m "[*] Loader. Fixed. Bug 17284:Rule Optimization. Implement collecting query stats using queries submitted by a user or a subset of users for Vertica-Redshift"
в)получим результат на экране консоли, например
    E:\A\_00003\amazonmigrationstudio>git commit --amend -m "[*] Loader. Fixed. Bug 17284:Rule Optimization. Implement collecting query stats using queries submitted by a user or a subset of users for Vertica-Redshift"
    [develop cde795c] [*] Loader. Fixed. Bug 17284:Rule Optimization. Implement collecting query stats using queries submitted by a user or a subset of users for Vertica-Redshift
     Date: Fri Mar 31 15:58:48 2017 +0300
г)не сработало, надо поинспериментировать на designP
Git --------------------------------------------------------------------------------------------------------------------
----- StashChanges -------------------------------------------------------------------
1.В точке [A] сделали коммит.
2.Сделами изменения [A->B]
3.Сохранили изменения в точке [A->B].
    Menu->VCS->GIT->StashChanges     и назвали [NewAB]
    После [StashChanges] idea вернула нас в [A].
4.Сделами изменения [A->B]
5.Сохранили изменения в точке [A->C].
    Menu->VCS->GIT->StashChanges     и назвали [NewAC]
    После [StashChanges] idea вернула нас в [A].
6.Вызвали изменения Menu->VCS->GIT->UnStashChanges [NewAС]
  Если они соответствую, закомители.
7.Перед вызовом изменений старые надо
    - или коммит
    - или сохранять  Menu->VCS->GIT->StashChanges и назвали [NewAD]
    - или revert (возвращать на точку коммита)

ANTLR ------------------------------------------------------------------------------------------------------------------
1.Добавляем в проект [antlr4-runtime-4.5.jar]
2.Формируем файл грамматики [tnsnames.g4]
3.[tnsnames.g4]->правая кнопка мыши -> Configure ANTLR -> Output directory  = E:\VerPOM\patterns\src\
                                       Configure ANTLR -> Package/namespace = antlr.tnsnames.output
                                       Configure ANTLR -> generate tree visitor =галочка
                                                                                (для использования шаблона Visitor)
