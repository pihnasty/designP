Debug  IDEA ------------------------------------------------------------------------------------------------------------
/*В режиме Debug я могу делать изменения в class Update, и изменения будут подхватываться.*/
Пример просматривался: E:\VerPOM\designP\src\main\java\tests\idea\DebudTest.java


Git --------------------------------------------------------------------------------------------------------------------
1.Изменение коментария
а)перейте в папку git-проекта, например   E:\A\_00003\amazonmigrationstudio\.git
б)в комендной строке дать команду
    $git commit --amend -m "[*] Loader. Fixed. Bug 17284:Rule Optimization. Implement collecting query stats using queries submitted by a user or a subset of users for Vertica-Redshift"
в)получим результат на экране консоли, например
    E:\A\_00003\amazonmigrationstudio>git commit --amend -m "[*] Loader. Fixed. Bug 17284:Rule Optimization. Implement collecting query stats using queries submitted by a user or a subset of users for Vertica-Redshift"
    [develop cde795c] [*] Loader. Fixed. Bug 17284:Rule Optimization. Implement collecting query stats using queries submitted by a user or a subset of users for Vertica-Redshift
     Date: Fri Mar 31 15:58:48 2017 +0300
г)не сработало, надо поинспериментировать на designP
Git --------------------------------------------------------------------------------------------------------------------
----- StashChanges -------------------------------------------------------------------
1.В точке [A] сделали коммит.
2.Сделами изменения [A->B]
3.Сохранили изменения в точке [A->B].
    Menu->VCS->GIT->StashChanges     и назвали [NewAB]
    После [StashChanges] idea вернула нас в [A].
4.Сделами изменения [A->B]
5.Сохранили изменения в точке [A->C].
    Menu->VCS->GIT->StashChanges     и назвали [NewAC]
    После [StashChanges] idea вернула нас в [A].
6.Вызвали изменения Menu->VCS->GIT->UnStashChanges [NewAС]
  Если они соответствую, закомители.
7.Перед вызовом изменений старые надо
    - или коммит
    - или сохранять  Menu->VCS->GIT->StashChanges и назвали [NewAD]
    - или revert (возвращать на точку коммита)



ANTLR ------------------------------------------------------------------------------------------------------------------
1.Добавляем в проект [antlr4-runtime-4.5.jar]
2.Формируем файл грамматики [tnsnames.g4]
3.[tnsnames.g4]->правая кнопка мыши -> Configure ANTLR -> Output directory  = E:\VerPOM\patterns\src\
                                       Configure ANTLR -> Package/namespace = antlr.tnsnames.output
                                       Configure ANTLR -> generate tree visitor =галочка
                                                                                (для использования шаблона Visitor)


A+F1                Переход к месту хранения файла
C+S+BS              Переход к последнему месту редактирования
C+S+N               Поиск нужного файла


        //region

        //ednregion
Refactor------------------------------------------------------------------------------
S+F6                Переменовать в коде выделенную переменную
С+F6                Изменить сигнатуру метода
F6                  Перемещает сущности (например, классы) в другие пакеты
C+A+M               Превращаем выделенный участок в метод
C+A+F               Превращаем выделенный участок в поле класса
C+A+С_              Превращаем выделенный участок в константу
C+A+N               Вместо вызова метода вставляет код метода
Use Interface Where Possible       - заменяет классы на интерфейсы в выражениях A a = new A(); -> IA a = new A();  p088
Encapsulate Fields                  - вставляет вместо переменной поле с get и set  p088
Replace Constructor wiht Factory Method  - заменяет конструктор методом фабрики  p089

Analize-------------------------------------------------------------------------------
Dependency Viewer   анализ зависимостей.
    Incpect Code    инспектирует правильность кода


Build---------------------------------------------------------------------------------
C+F9                компилирует только изменненные файлы
Run-----------------------------------------------------------------------------------
C+F2                Остановка приложения
[Reload Changed Classed] перезагрузка при отладке измененных классов (только при отладки)
F7                  Шаг во внутрь
F8                  Шаг в наружу
F9                  Возобнавляет программу
A+F8                Вычислить выражение
A+S+F9              Режим Debug
Tools---------------------------------------------------------------------------------

C+A+L               Переформатирования кода
C+A+I               Установить отступ для строк кода
C+A+O               Оптимизация импорта
A+1                 Окно Project
A+2                 Окно Favorites
A+4                 Окно Consol
A+5                 Окно Debug
А+6                 // TODO: put any additional setup code here
A+7                 Окно Структуры редактируемого файла
----------------------------------------------------------------------------------------
А+8                 Hierarchy: Иерархия вызовов
    C+H                        Иерархия типов
    C+S+H                      Иерархия методов
    C+А+H                      Иерархия вызовов
----------------------------------------------------------------------------------------
[Store Current Layout as Default]-  Восстановить расположение окон по умолчанию
A+[->]    A+[<-]    Переход к закладке справа/слева
C+E                 Вызов часто используемых файлов.

ToolBar-------------------------------------------------------------------------------
[Synchnize] перегрузка всех файлов, измененных извне
С+A+[->]    С+A+[<-]    Переход к месту редактирования [предыдущему/последующему]

F2 [F2+S]           Переход вверх/вниз по ошибкам

Окно редактирования-------------------------------------------------------------------
[Window->Editor Tabs->Pin Active Tab]   Закрепить окно с файлом. Будет постоянно загружаться и не будет вытесняться новыми окнами
С+]/С+[             переход к концу/началу блока
С+S+]/С+S+[         переход к концу/началу блока с выделением
C+S+E               завершить оператор
С+Y                 удалить строку с курсором
С+D                 удалить до конца слова
С+J                 объединить строки
С+S+U               сменить регистр букв



Окно редактирования-------------------------------------------------------------------
[Window->Editor Tabs->Pin Active Tab]   Закрепить окно с файлом. Будет постоянно загружаться и не будет вытесняться новыми окнами

Настройка Idea -----------------------------------------------------------------------
    Appearance (Настройка общих параметров)-------------------------------------------
C+S+[+/-]           сворачивание/разворачивание методов

C+S+A               диалог локальной истории

[Setting->Editor->code Style->Live Templates]   настройка шаблонов
C+J                                             настройка шаблонов
C+A+J                                           обернуть живым шаблоном
C+A+T                                           обернуть живым шаблоном
С+S+T                                           создание теста

[Appearance & Behavior->Path Variables]         Установка путей к переменным для конфигурации проекта

JavaDOC  ----------------------------------------------------------------------------
С+Q                 вызов описания методов, который использую (Нажать на выделенном классе или методе).
A+Q                 При редактировании текста показывает, в каком классе и в каком методе ты находишься











Пример редактирования ----------------------------------------------------------------
С+N     переход к классу
C+B     переход к определению
C+E     последнии редактируемые
С+" "   автозавершение кода
С+S+" "   умное автозавершение кода

Навигация ---------------------------------------------------------------------------
С+N     переход к классу
С+S+N   переход к файлу
С+A+[->]    С+A+[<-]    Переход к месту редактирования [предыдущему/последующему]
C+E     Открыть последний файл

A+Ent   Объединение исключений


Анализ кода -------------------------------------------------------------------------
Настройки в Idea -------------------------------------------------------------------------------------------------------
001-----------VM Options: -verbose
The activity of a loader can be observed through executing the bytecode interpreter in verbose mode ( -verbose).
Активность погрузчика можно наблюдать через выполнение интерпретатора байт - кода в расширенном режиме ( -verbose ).




A       =Alt
Ent       =Enter
C       =Ctrl
E       =Enter
D       =Delete
S       =Shift
BS      =BackSpase
C_      ="C"




      //
      HBox hbBrowse = new HBox()
      hbBrowse.setAlignment(Pos.BOTTOM_LEFT);
        GridPane.setRowIndex(hbBrowse, 5);
        GridPane.setColumnIndex(hbBrowse, 3);
        this.getChildren().add(hbBrowse);


                  // setVgap(5);
                  this.setGridLinesVisible(true);
